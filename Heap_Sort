#include<iostream>
#include<vector>
using namespace std;

void heapify(vector<int>&a,int n,int i) {
    int l=i, r=2*i+1, s=2*i+2;

    if(r<n && a[r]>a[l]) l=r;
    if(s<n && a[s]>a[l]) l=s;

    if(l!=i) {
        swap(a[i],a[l]);
        heapify(a,n,l);
    }
}

void heapSort(vector<int>&a) {
    int n=a.size();

    for(int i=n/2-1;i>=0;i--) 
        heapify(a,n,i);

    for(int i=n-1;i>0;i--) {
        swap(a[0],a[i]);
        heapify(a,i,0);
    }
}

int main() {
    vector<int>a={12,11,13,5,6,7};

    heapSort(a);

    for(int x:a) 
        cout<<x<<" ";
}
class Solution {
public:
    void heapify(int i,int n,vector<int>&nums){
        int largest=i;
        int l=2*i+1;
        int r=2*i+2;

        if(l<n && nums[l]>nums[largest]) largest=l;
        if(r<n && nums[r]>nums[largest]) largest=r;

        if(largest!=i){
            swap(nums[i],nums[largest]);
            heapify(largest,n,nums);
        }
    }
    void sortColors(vector<int>& nums) {
       int n=nums.size();
       for(int i=n/2-1;i>=0;i--){
        heapify(i,n,nums);
       }

       for(int i=n-1;i>0;i--){
        swap(nums[0],nums[i]);
        heapify(0,i,nums);
       }
   
    }
};
