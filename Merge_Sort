
void merge(vector<int>&arr,int s,int e){
       int mid=s+(e-s)/2;
       int len1=mid-s+1,len2=e-mid,k=s;
       int*first=new int[len1];
       int*second=new int[len2];
       for(int i=0;i<len1;i++){
          first[i]=arr[k++];
       }
       k=mid+1;
        for(int i=0;i<len2;i++){
          second[i]=arr[k++];
       }
      int i=0,j=0;
      k=s;
      while(i<len1&&j<len2){
          if(first[i]<second[j]){
              arr[k++]=first[i++];
          }
          else{
              arr[k++]=second[j++];
          }
      }
      while(i<len1){
           arr[k++]=first[i++];
      }

      while(j<len2){
           arr[k++]=second[j++];
      }

delete[]first;
delete[]second;


}

void mergest(vector<int>&arr,int s,int e){
    if(s>=e) 
    return; 
    int mid=s+(e-s)/2;
    mergest(arr,s,mid);
    mergest(arr,mid+1,e);
    merge(arr,s,e);
}
void mergeSort(vector < int > & arr, int n) {
    
    mergest(arr,0,n-1);
}
